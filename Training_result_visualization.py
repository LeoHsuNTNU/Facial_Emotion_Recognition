# -*- coding: utf-8 -*-
"""Training_result_visualization.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DnHIxdCHb1PB5S5JiJ7gFwFcC2gssSip
"""

# import the self-define module
import os
current_path = os.path.dirname(os.path.abspath(__file__))
import sys
sys.path.append('{0}/lib'.format(current_path))
import argparse
import matplotlib.pyplot as plt
import h5py
import numpy as np

parser = argparse.ArgumentParser()
parser.add_argument("--save_name", type=str,default=None, dest='save_name', help="The name of the saved model and training result")
args = parser.parse_args()

save_name = args.save_name
result_path = '{0}/Training_result/{1}.h5'.format(current_path, save_name)
fh = h5py.File(result_path, 'r')

train_loss = np.array(fh.get('/Train/loss'))
train_acc = np.array(fh.get('/Train/acc'))
iteration = np.array(fh.get('/Train/iteration'))
val_loss = np.array(fh.get('/Validation/loss'))
val_acc = np.array(fh.get('/Validation/acc'))
x_axis = np.arange(len(train_loss)) * 20 
plt.figure()
plt.plot(x_axis, train_loss, label='training')
plt.plot(x_axis, val_loss, label='validation')
plt.xlabel('Iteration')
plt.ylabel('Loss')
plt.legend(loc='upper right')
plt.show()

plt.figure()
plt.plot(x_axis, train_acc, label='training')
plt.plot(x_axis, val_acc, label='validation')
plt.xlabel('Iteration')
plt.ylabel('Accuracy (%)')
plt.legend(loc='upper right')
plt.show()

